name: Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CI: true
  PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1 # We'll install browsers separately

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps chromium

      - name: Run lint
        run: pnpm lint

      - name: Run type check
        run: pnpm typecheck

      - name: Run unit tests
        run: pnpm test:unit:coverage

      - name: Build library and test pages
        run: |
          pnpm build
          pnpm vite build e2e/test-pages --config e2e/test-pages/vite.config.ts

      - name: Run E2E tests
        run: pnpm exec playwright test
        env:
          NODE_ENV: test

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            playwright-report/
            coverage/
          retention-days: 30
          if-no-files-found: ignore

      - name: Cleanup build artifacts
        if: always()
        run: |
          rm -rf dist/test-pages
          rm -rf storybook-static
          rm -rf playwright-report
          rm -rf test-results
